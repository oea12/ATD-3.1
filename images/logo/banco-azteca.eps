%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 14.0.0%%For: (ignacio) ()%%Title: (banco-azteca.eps)%%CreationDate: 03/03/18 13:06%%Canvassize: 16383%%BoundingBox: 2953 4032 3039 4076%%HiResBoundingBox: 2953.1338 4032.043 3038.1738 4075.0093%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 0.195313 0.964844 0.902344 0.101563 (C=20 M=96 Y=90 K=10)%%+ 0.613281 0.507813 0.433594 0.144531 (C=61 M=51 Y=43 K=14)%%+ 0.875 0.359375 0.875 0.273438 (C=88 M=36 Y=88 K=27)%%+ 1 1 1 1 ([Registro])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 2996.4609 4053.3721 2996.4609 4053.3721%AI3_TileBox: 2697.9937 3632.5654 3293.3135 4474.4858%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 113.3857 56.6924%AI5_RulerUnits: 4%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: 2867.0488 4135.1133 4.6284 1016 861 18 0 0 43 149 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Calcando) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Plugin de envolventes de Adobe) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Plugin Pintura interactiva de Adobe) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Plugin Fusiones de Adobe) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Plugin Pincel de dispersi\227n de Adobe) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Plugin Pincel de dispersi\227n de Adobe) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Plugin Pincel de motivo de Adobe) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Plugin Pincel de motivo de Adobe) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Plugin Pincel de arte de Adobe) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Plugin Pincel de arte de Adobe) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Plugin Pincel caligr\207fico de Adobe) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (S\222mbolos de Adobe) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Forma compuesta de Adobe) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registro]) 0 Xs([Registro])Pc0.613281 0.507813 0.433594 0.144531 (C=61 M=51 Y=43 K=14) 0 0 Xk(C=61 M=51 Y=43 K=14)Pc0.875 0.359375 0.875 0.273438 (C=88 M=36 Y=88 K=27) 0 0 Xk(C=88 M=36 Y=88 K=27)Pc0.195313 0.964844 0.902344 0.101563 (C=20 M=96 Y=90 K=10) 0 0 Xk(C=20 M=96 Y=90 K=10)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Capa 1) Ln0 Au0 O0.875 0.359375 0.875 0.273438 (C=88 M=36 Y=88 K=27) 0 0 Xk0 J 0 j 1 w 4 M []0 d0 XR2963.3955 4036.5684 m2963.3193 4036.666 2963.2139 4036.75 2963.0762 4036.8145 c2962.9385 4036.8809 2962.7998 4036.9141 2962.6602 4036.9141 c2962.5771 4036.9141 2962.4941 4036.9043 2962.4111 4036.8828 c2962.3281 4036.8613 2962.2529 4036.8301 2962.1855 4036.7871 c2962.1172 4036.7441 2962.061 4036.6875 2962.0176 4036.6172 c2961.9746 4036.5469 2961.9531 4036.4629 2961.9531 4036.3652 c2961.9531 4036.2734 2961.9717 4036.1973 2962.0098 4036.1328 c2962.0474 4036.0703 2962.0996 4036.0156 2962.165 4035.9688 c2962.2314 4035.9238 2962.3115 4035.8848 2962.4053 4035.8496 c2962.5 4035.8164 2962.6035 4035.7832 2962.7168 4035.75 c2962.8447 4035.707 2962.978 4035.6602 2963.1162 4035.6074 c2963.2529 4035.5527 2963.3799 4035.4844 2963.4946 4035.3984 c2963.6104 4035.3105 2963.7041 4035.2012 2963.7773 4035.0703 c2963.8511 4034.9375 2963.8877 4034.7734 2963.8877 4034.5781 c2963.8877 4034.3633 2963.8481 4034.1738 2963.7686 4034.0137 c2963.6895 4033.8555 2963.584 4033.7227 2963.4521 4033.6152 c2963.3193 4033.5098 2963.165 4033.4297 2962.9883 4033.3789 c2962.8115 4033.3242 2962.6245 4033.2988 2962.4277 4033.2988 c2962.168 4033.2988 2961.9131 4033.3477 2961.6641 4033.4434 c2961.4155 4033.5391 2961.2119 4033.6816 2961.0532 4033.8711 C2961.5625 4034.3457 l2961.6606 4034.209 2961.792 4034.1016 2961.9561 4034.0234 c2962.1196 4033.9434 2962.2813 4033.9043 2962.4399 4033.9043 c2962.5229 4033.9043 2962.6074 4033.9141 2962.6938 4033.9355 c2962.7813 4033.9551 2962.8584 4033.9902 2962.9287 4034.041 c2962.999 4034.0879 2963.0552 4034.1504 2963.0986 4034.2246 c2963.1416 4034.2969 2963.1636 4034.3887 2963.1636 4034.498 c2963.1636 4034.6035 2963.1387 4034.6914 2963.0898 4034.7617 c2963.041 4034.832 2962.9751 4034.8906 2962.8926 4034.9414 c2962.8096 4034.9922 2962.7109 4035.0371 2962.5977 4035.0762 c2962.4844 4035.1133 2962.3657 4035.1523 2962.2412 4035.1934 c2962.1211 4035.2305 2962 4035.2773 2961.8794 4035.3301 c2961.7588 4035.3828 2961.6504 4035.4512 2961.5537 4035.5391 c2961.458 4035.627 2961.3794 4035.7324 2961.3188 4035.8594 c2961.2583 4035.9844 2961.2275 4036.1426 2961.2275 4036.332 c2961.2275 4036.5352 2961.2715 4036.7109 2961.3564 4036.8574 c2961.4404 4037.0039 2961.5527 4037.125 2961.6895 4037.2227 c2961.8271 4037.3184 2961.9839 4037.3906 2962.1592 4037.4375 c2962.3345 4037.4844 2962.5137 4037.5078 2962.6938 4037.5078 c2962.8979 4037.5078 2963.1035 4037.4727 2963.3135 4037.4004 c2963.5225 4037.3301 2963.7046 4037.2207 2963.8594 4037.0781 c2963.3955 4036.5684 Lf2967.2705 4033.4004 m2966.626 4033.4004 L2966.626 4033.8359 L2966.6147 4033.8359 l2966.5542 4033.7012 2966.4497 4033.582 2966.3018 4033.4766 c2966.1514 4033.373 2965.9756 4033.3223 2965.7715 4033.3223 c2965.5947 4033.3223 2965.4424 4033.3535 2965.3154 4033.4141 c2965.1899 4033.4766 2965.0859 4033.5586 2965.0054 4033.6621 c2964.9238 4033.7637 2964.8647 4033.8789 2964.8271 4034.0117 c2964.7891 4034.1426 2964.7705 4034.2793 2964.7705 4034.418 C2964.7705 4036.1172 L2965.4492 4036.1172 L2965.4492 4034.6113 l2965.4492 4034.5313 2965.4551 4034.4492 2965.4663 4034.3633 c2965.4775 4034.2754 2965.5024 4034.1973 2965.54 4034.127 c2965.5771 4034.0586 2965.6294 4034 2965.6953 4033.9551 c2965.7617 4033.9102 2965.8486 4033.8867 2965.958 4033.8867 c2966.0635 4033.8867 2966.1572 4033.9102 2966.2393 4033.9531 c2966.3198 4033.9961 2966.3857 4034.0508 2966.4365 4034.1211 c2966.4873 4034.1875 2966.5264 4034.2656 2966.5527 4034.3535 c2966.5791 4034.4434 2966.5918 4034.5313 2966.5918 4034.623 C2966.5918 4036.1172 L2967.2705 4036.1172 l2967.2705 4033.4004 Lf*u2970.9033 4034.7246 m2970.9033 4034.6348 l2970.9033 4034.6035 2970.9009 4034.5723 2970.8975 4034.543 C2968.8325 4034.543 l2968.8398 4034.4453 2968.8652 4034.3555 2968.9092 4034.2754 c2968.9521 4034.1934 2969.0093 4034.123 2969.0815 4034.0645 c2969.1528 4034.0078 2969.2334 4033.9609 2969.3242 4033.9277 c2969.415 4033.8926 2969.5093 4033.877 2969.6074 4033.877 c2969.7769 4033.877 2969.9204 4033.9063 2970.0371 4033.9688 c2970.1543 4034.0313 2970.25 4034.1172 2970.3262 4034.2266 C2970.7783 4033.8652 l2970.5107 4033.502 2970.1226 4033.3223 2969.6133 4033.3223 c2969.4019 4033.3223 2969.208 4033.3555 2969.0303 4033.4199 c2968.8525 4033.4863 2968.6992 4033.5801 2968.5693 4033.7012 c2968.4395 4033.8203 2968.3369 4033.9688 2968.2642 4034.1445 c2968.1904 4034.3203 2968.1538 4034.5195 2968.1538 4034.7422 c2968.1538 4034.959 2968.1904 4035.1582 2968.2642 4035.3379 c2968.3369 4035.5176 2968.438 4035.6699 2968.5664 4035.7969 c2968.6948 4035.9219 2968.8462 4036.0195 2969.0215 4036.0918 c2969.1968 4036.1602 2969.3867 4036.1953 2969.5898 4036.1953 c2969.7783 4036.1953 2969.9531 4036.1641 2970.1138 4036.1035 c2970.2739 4036.0391 2970.4126 4035.9473 2970.5293 4035.8262 c2970.6465 4035.7031 2970.7378 4035.5508 2970.8037 4035.3672 c2970.8701 4035.1836 2970.9033 4034.9707 2970.9033 4034.7246 CF1 D2970.2241 4035.0313 m2970.2241 4035.1172 2970.2119 4035.1992 2970.1875 4035.2793 c2970.1631 4035.3574 2970.124 4035.4277 2970.0713 4035.4883 c2970.0186 4035.5488 2969.9512 4035.5977 2969.8706 4035.6328 c2969.7891 4035.668 2969.6938 4035.6855 2969.585 4035.6855 c2969.3809 4035.6855 2969.2085 4035.625 2969.0674 4035.502 c2968.9258 4035.3789 2968.8467 4035.2227 2968.8325 4035.0313 c2970.2241 4035.0313 Lf*U*u0 D2971.7852 4036.1172 m2972.4307 4036.1172 L2972.4307 4035.6797 L2972.4419 4035.6797 l2972.502 4035.8164 2972.6064 4035.9355 2972.7559 4036.041 c2972.9043 4036.1426 2973.0811 4036.1953 2973.2847 4036.1953 c2973.4619 4036.1953 2973.6133 4036.1641 2973.7397 4036.1035 c2973.8662 4036.041 2973.9697 4035.957 2974.0518 4035.8555 c2974.1323 4035.7539 2974.1914 4035.6367 2974.2295 4035.5059 c2974.2671 4035.373 2974.2861 4035.2363 2974.2861 4035.0977 C2974.2861 4033.4004 L2973.6069 4033.4004 L2973.6069 4034.9043 l2973.6069 4034.9844 2973.6016 4035.0684 2973.5898 4035.1543 c2973.5791 4035.2422 2973.5547 4035.3203 2973.5166 4035.3887 c2973.4785 4035.459 2973.4258 4035.5176 2973.3613 4035.5625 c2973.2949 4035.6074 2973.207 4035.6289 2973.0977 4035.6289 c2972.9888 4035.6289 2972.8945 4035.6074 2972.8149 4035.5645 c2972.7354 4035.5215 2972.6709 4035.4648 2972.6201 4035.3984 c2972.5688 4035.3301 2972.5303 4035.252 2972.5039 4035.1641 c2972.4775 4035.0742 2972.4644 4034.9844 2972.4644 4034.8945 C2972.4644 4033.4004 L2971.7852 4033.4004 l2971.7852 4036.1172 Lf2971.9946 4036.6133 m2972.0107 4036.7051 2972.0313 4036.793 2972.0596 4036.8809 c2972.0879 4036.9668 2972.127 4037.043 2972.1758 4037.1094 c2972.2246 4037.1738 2972.2861 4037.2285 2972.3594 4037.2695 c2972.4336 4037.3125 2972.5225 4037.334 2972.6279 4037.334 c2972.7041 4037.334 2972.7793 4037.3223 2972.8574 4037.3047 c2972.9336 4037.2852 2973.0078 4037.2598 2973.0752 4037.2305 c2973.1504 4037.2012 2973.2197 4037.1738 2973.2817 4037.1543 c2973.3438 4037.1328 2973.3975 4037.123 2973.4434 4037.123 c2973.5186 4037.123 2973.5762 4037.1465 2973.6157 4037.1934 c2973.6553 4037.2402 2973.6846 4037.2969 2973.7031 4037.3613 C2974.0767 4037.3613 l2974.0615 4037.2695 2974.04 4037.1816 2974.0117 4037.0957 c2973.9834 4037.0078 2973.9443 4036.9316 2973.8955 4036.8652 c2973.8467 4036.7988 2973.7852 4036.7461 2973.7119 4036.7051 c2973.6377 4036.6621 2973.5488 4036.6426 2973.4434 4036.6426 c2973.3643 4036.6426 2973.2847 4036.6543 2973.2051 4036.6758 c2973.1265 4036.6992 2973.0508 4036.7246 2972.9795 4036.7539 c2972.9116 4036.7852 2972.8467 4036.8105 2972.7871 4036.8301 c2972.7261 4036.8477 2972.6738 4036.8574 2972.6279 4036.8574 c2972.5527 4036.8574 2972.4951 4036.832 2972.4556 4036.7832 c2972.416 4036.7344 2972.3867 4036.6777 2972.3682 4036.6133 c2971.9946 4036.6133 Lf*U*u2976.9897 4033.7461 m2976.9731 4033.7461 l2976.9053 4033.625 2976.7959 4033.5273 2976.645 4033.4492 c2976.4941 4033.3711 2976.3223 4033.332 2976.1299 4033.332 c2976.021 4033.332 2975.9072 4033.3477 2975.7881 4033.375 c2975.6689 4033.4043 2975.5596 4033.4512 2975.46 4033.5176 c2975.3604 4033.582 2975.2764 4033.6699 2975.2109 4033.7773 c2975.145 4033.8848 2975.1123 4034.0176 2975.1123 4034.1758 c2975.1123 4034.3789 2975.1689 4034.541 2975.2842 4034.6621 c2975.3994 4034.7832 2975.5483 4034.875 2975.7285 4034.9395 c2975.9092 4035.0039 2976.1104 4035.0449 2976.3311 4035.0664 c2976.5518 4035.0859 2976.7676 4035.0977 2976.979 4035.0977 C2976.979 4035.166 l2976.979 4035.3359 2976.918 4035.4609 2976.7949 4035.543 c2976.6724 4035.623 2976.5259 4035.6641 2976.3564 4035.6641 c2976.2129 4035.6641 2976.0752 4035.6328 2975.9438 4035.5723 c2975.811 4035.5117 2975.7021 4035.4395 2975.6152 4035.3516 C2975.2646 4035.7656 l2975.4189 4035.9082 2975.5977 4036.0156 2975.7998 4036.0879 c2976.001 4036.1602 2976.2056 4036.1953 2976.4126 4036.1953 c2976.6543 4036.1953 2976.8535 4036.1621 2977.0098 4036.0938 c2977.1665 4036.0254 2977.29 4035.9375 2977.3799 4035.8262 c2977.4707 4035.7188 2977.5337 4035.5957 2977.5698 4035.4609 c2977.606 4035.3242 2977.624 4035.1895 2977.624 4035.0527 C2977.624 4033.4004 L2976.9897 4033.4004 l2976.9897 4033.7461 Lf1 D2976.979 4034.6387 m2976.8262 4034.6387 l2976.7168 4034.6387 2976.6016 4034.6348 2976.4814 4034.625 c2976.3604 4034.6152 2976.249 4034.5957 2976.1475 4034.5625 c2976.0454 4034.5313 2975.9604 4034.4863 2975.8926 4034.4277 c2975.8252 4034.3691 2975.791 4034.2891 2975.791 4034.1875 c2975.791 4034.123 2975.8047 4034.0703 2975.8335 4034.0254 c2975.8613 4033.9824 2975.8984 4033.9473 2975.9438 4033.9219 c2975.9883 4033.8945 2976.0405 4033.875 2976.0957 4033.8652 c2976.1533 4033.8535 2976.209 4033.8477 2976.2666 4033.8477 c2976.5 4033.8477 2976.6768 4033.9102 2976.7979 4034.0352 c2976.9185 4034.1582 2976.979 4034.3281 2976.979 4034.543 c2976.979 4034.6387 Lf*U0 D2980.1299 4035.3926 m2980.0693 4035.4707 2979.9868 4035.5391 2979.8809 4035.5996 c2979.7754 4035.6563 2979.6606 4035.6855 2979.5361 4035.6855 c2979.4258 4035.6855 2979.3267 4035.6641 2979.2354 4035.6191 c2979.1455 4035.5723 2979.0996 4035.498 2979.0996 4035.3926 c2979.0996 4035.2852 2979.1499 4035.2109 2979.25 4035.1699 c2979.3496 4035.125 2979.4961 4035.082 2979.6885 4035.0371 c2979.7905 4035.0137 2979.8926 4034.9824 2979.9971 4034.9453 c2980.1006 4034.9082 2980.1953 4034.8574 2980.2793 4034.7949 c2980.3647 4034.7324 2980.4336 4034.6563 2980.4858 4034.5625 c2980.5391 4034.4707 2980.5654 4034.3574 2980.5654 4034.2266 c2980.5654 4034.0605 2980.5342 4033.9199 2980.4722 4033.8047 c2980.4102 4033.6895 2980.3271 4033.5957 2980.2236 4033.5254 c2980.1191 4033.4531 2979.999 4033.4023 2979.8613 4033.3691 c2979.7236 4033.3379 2979.5811 4033.3203 2979.4341 4033.3203 c2979.2217 4033.3203 2979.0171 4033.3613 2978.8174 4033.4375 c2978.6172 4033.5156 2978.4512 4033.625 2978.3193 4033.7676 C2978.7661 4034.1875 l2978.8418 4034.0879 2978.9399 4034.0078 2979.0605 4033.9434 c2979.1816 4033.8809 2979.3145 4033.8477 2979.4619 4033.8477 c2979.5112 4033.8477 2979.5605 4033.8535 2979.6123 4033.8652 c2979.6631 4033.877 2979.7104 4033.8945 2979.7539 4033.918 c2979.7969 4033.9434 2979.8315 4033.9766 2979.8584 4034.0176 c2979.8848 4034.0586 2979.8979 4034.1094 2979.8979 4034.1699 c2979.8979 4034.2832 2979.8457 4034.3633 2979.7422 4034.4121 c2979.6382 4034.4629 2979.4834 4034.5117 2979.2754 4034.5605 c2979.1738 4034.584 2979.0747 4034.6113 2978.9785 4034.6484 c2978.8818 4034.6836 2978.7964 4034.7305 2978.7212 4034.7891 c2978.6455 4034.8496 2978.5859 4034.9219 2978.54 4035.0078 c2978.4951 4035.0938 2978.4727 4035.2012 2978.4727 4035.3301 c2978.4727 4035.4805 2978.5034 4035.6113 2978.5654 4035.7207 c2978.6274 4035.8301 2978.71 4035.918 2978.8115 4035.9883 c2978.9131 4036.0586 2979.0283 4036.1113 2979.1572 4036.1445 c2979.2842 4036.1777 2979.417 4036.1953 2979.5532 4036.1953 c2979.7485 4036.1953 2979.9404 4036.1621 2980.127 4036.0938 c2980.3135 4036.0254 2980.4614 4035.9219 2980.5713 4035.7832 c2980.1299 4035.3926 Lf2981.2559 4033.7969 m2981.2559 4033.918 2981.2998 4034.0215 2981.3887 4034.1074 c2981.4775 4034.1953 2981.584 4034.2383 2981.708 4034.2383 c2981.8286 4034.2383 2981.9346 4034.1973 2982.0244 4034.1133 c2982.1157 4034.0313 2982.1602 4033.9277 2982.1602 4033.8086 c2982.1602 4033.6875 2982.1162 4033.584 2982.0273 4033.4961 c2981.939 4033.4102 2981.833 4033.3672 2981.708 4033.3672 c2981.6475 4033.3672 2981.5903 4033.3789 2981.5356 4033.4004 c2981.4805 4033.4238 2981.4326 4033.4531 2981.3916 4033.4902 c2981.3496 4033.5293 2981.3174 4033.5742 2981.2925 4033.627 c2981.2681 4033.6797 2981.2559 4033.7363 2981.2559 4033.7969 CF*u2984.582 4037.4063 m2986.002 4037.4063 l2986.2627 4037.4063 2986.5244 4037.373 2986.7881 4037.3047 c2987.0527 4037.2363 2987.2891 4037.125 2987.501 4036.9668 c2987.7129 4036.8105 2987.8843 4036.6055 2988.0166 4036.3516 c2988.1484 4036.0977 2988.2139 4035.7813 2988.2139 4035.4023 c2988.2139 4035.0527 2988.1484 4034.75 2988.0166 4034.498 c2987.8843 4034.2461 2987.7129 4034.0371 2987.501 4033.877 c2987.2891 4033.7129 2987.0527 4033.5938 2986.7881 4033.5156 c2986.5244 4033.4395 2986.2627 4033.4004 2986.002 4033.4004 C2984.582 4033.4004 l2984.582 4037.4063 Lf1 D2985.8887 4034.0234 m2986.0732 4034.0234 2986.2578 4034.0449 2986.4434 4034.0879 c2986.6279 4034.1309 2986.7949 4034.2051 2986.9443 4034.3086 c2987.0928 4034.4121 2987.2148 4034.5527 2987.3086 4034.7305 c2987.4033 4034.9082 2987.4507 4035.1309 2987.4507 4035.4023 c2987.4507 4035.6895 2987.4033 4035.9238 2987.3086 4036.1055 c2987.2148 4036.2852 2987.0928 4036.4277 2986.9443 4036.5293 c2986.7949 4036.6309 2986.6279 4036.7012 2986.4434 4036.7383 c2986.2578 4036.7773 2986.0732 4036.7949 2985.8887 4036.7949 C2985.2949 4036.7949 L2985.2949 4034.0234 l2985.8887 4034.0234 Lf*U*u0 D2991.6875 4034.7246 m2991.6875 4034.6348 l2991.6875 4034.6035 2991.6855 4034.5723 2991.6816 4034.543 C2989.6172 4034.543 l2989.624 4034.4453 2989.6494 4034.3555 2989.6934 4034.2754 c2989.7368 4034.1934 2989.7949 4034.123 2989.8662 4034.0645 c2989.9375 4034.0078 2990.019 4033.9609 2990.1094 4033.9277 c2990.2002 4033.8926 2990.2939 4033.877 2990.3921 4033.877 c2990.5615 4033.877 2990.7051 4033.9063 2990.8223 4033.9688 c2990.9385 4034.0313 2991.0347 4034.1172 2991.1104 4034.2266 C2991.563 4033.8652 l2991.2949 4033.502 2990.9072 4033.3223 2990.3975 4033.3223 c2990.1865 4033.3223 2989.9922 4033.3555 2989.8149 4033.4199 c2989.6377 4033.4863 2989.4854 4033.5801 2989.3535 4033.7012 c2989.2236 4033.8203 2989.1221 4033.9688 2989.0488 4034.1445 c2988.9751 4034.3203 2988.9385 4034.5195 2988.9385 4034.7422 c2988.9385 4034.959 2988.9751 4035.1582 2989.0488 4035.3379 c2989.1221 4035.5176 2989.2227 4035.6699 2989.3506 4035.7969 c2989.4795 4035.9219 2989.6309 4036.0195 2989.8066 4036.0918 c2989.9824 4036.1602 2990.1709 4036.1953 2990.3755 4036.1953 c2990.5635 4036.1953 2990.7383 4036.1641 2990.8984 4036.1035 c2991.0586 4036.0391 2991.1973 4035.9473 2991.314 4035.8262 c2991.4307 4035.7031 2991.5225 4035.5508 2991.5889 4035.3672 c2991.6543 4035.1836 2991.6875 4034.9707 2991.6875 4034.7246 CF1 D2991.0088 4035.0313 m2991.0088 4035.1172 2990.9966 4035.1992 2990.9717 4035.2793 c2990.9473 4035.3574 2990.9082 4035.4277 2990.856 4035.4883 c2990.8032 4035.5488 2990.7363 4035.5977 2990.6553 4035.6328 c2990.5737 4035.668 2990.4785 4035.6855 2990.3696 4035.6855 c2990.1655 4035.6855 2989.9932 4035.625 2989.8516 4035.502 c2989.71 4035.3789 2989.6323 4035.2227 2989.6172 4035.0313 c2991.0088 4035.0313 Lf*U0 D2994.4258 4035.3633 m2994.373 4035.4395 2994.2935 4035.502 2994.1885 4035.5527 c2994.082 4035.6035 2993.9756 4035.6289 2993.8657 4035.6289 c2993.7412 4035.6289 2993.6318 4035.6035 2993.5371 4035.5527 c2993.4429 4035.502 2993.3652 4035.4355 2993.3027 4035.3516 c2993.2412 4035.2695 2993.1943 4035.1758 2993.1641 4035.0723 c2993.1343 4034.9688 2993.1191 4034.8633 2993.1191 4034.7578 c2993.1191 4034.6523 2993.1348 4034.5488 2993.167 4034.4434 c2993.1992 4034.3418 2993.2471 4034.248 2993.311 4034.1641 c2993.375 4034.082 2993.4561 4034.0137 2993.5518 4033.9629 c2993.6475 4033.9141 2993.7603 4033.8867 2993.8882 4033.8867 c2993.9941 4033.8867 2994.0996 4033.9082 2994.2051 4033.9492 c2994.3105 4033.9922 2994.3955 4034.0508 2994.4595 4034.1309 C2994.8838 4033.7012 l2994.771 4033.5801 2994.627 4033.4863 2994.4512 4033.4219 c2994.2754 4033.3535 2994.0864 4033.3203 2993.8823 4033.3203 c2993.6826 4033.3203 2993.4932 4033.3535 2993.3135 4033.418 c2993.1348 4033.4824 2992.9785 4033.5762 2992.8442 4033.7012 c2992.7109 4033.8242 2992.6045 4033.9766 2992.5273 4034.1543 c2992.4502 4034.3301 2992.4121 4034.5313 2992.4121 4034.7578 c2992.4121 4034.9766 2992.4502 4035.1758 2992.5273 4035.3516 c2992.6045 4035.5293 2992.709 4035.6797 2992.8418 4035.8047 c2992.9736 4035.9297 2993.1279 4036.0254 2993.3027 4036.0938 c2993.4785 4036.1621 2993.666 4036.1953 2993.8657 4036.1953 c2994.0654 4036.1953 2994.2588 4036.1582 2994.4458 4036.082 c2994.6318 4036.0059 2994.7803 4035.9043 2994.8896 4035.7715 c2994.4258 4035.3633 Lf*u2995.4727 4037.0391 m2995.4727 4037.1465 2995.5127 4037.2422 2995.5938 4037.3242 c2995.6748 4037.4063 2995.7773 4037.4453 2995.9023 4037.4453 c2996.0264 4037.4453 2996.1309 4037.4063 2996.2158 4037.3301 c2996.3013 4037.252 2996.3438 4037.1543 2996.3438 4037.0391 c2996.3438 4036.9219 2996.3013 4036.8242 2996.2158 4036.748 c2996.1309 4036.6699 2996.0264 4036.6309 2995.9023 4036.6309 c2995.7773 4036.6309 2995.6748 4036.6719 2995.5938 4036.752 c2995.5127 4036.834 2995.4727 4036.9297 2995.4727 4037.0391 CF2995.5684 4036.1172 m2996.2471 4036.1172 L2996.2471 4033.4004 L2995.5684 4033.4004 l2995.5684 4036.1172 Lf*U*u3000.0605 4033.4004 m2999.415 4033.4004 L2999.415 4033.8086 L2999.4043 4033.8086 l2999.3096 4033.6504 2999.1787 4033.5293 2999.0098 4033.4473 c2998.8428 4033.3633 2998.6621 4033.3223 2998.4707 4033.3223 c2998.2627 4033.3223 2998.0771 4033.3594 2997.9141 4033.4375 c2997.748 4033.5137 2997.6094 4033.6191 2997.4941 4033.748 c2997.3789 4033.8789 2997.291 4034.0313 2997.2285 4034.207 c2997.166 4034.3828 2997.1348 4034.5703 2997.1348 4034.7695 c2997.1348 4034.9707 2997.168 4035.1563 2997.2314 4035.3301 c2997.2949 4035.5039 2997.3867 4035.6543 2997.5029 4035.7832 c2997.6201 4035.9102 2997.7598 4036.0117 2997.9219 4036.084 c2998.084 4036.1582 2998.2617 4036.1953 2998.4531 4036.1953 c2998.5781 4036.1953 2998.6895 4036.1816 2998.7871 4036.1523 c2998.8857 4036.125 2998.9707 4036.0898 2999.0449 4036.0469 c2999.1182 4036.0059 2999.1816 4035.9609 2999.2344 4035.9121 c2999.2871 4035.8633 2999.3301 4035.8164 2999.3643 4035.7715 C2999.3809 4035.7715 L2999.3809 4037.6777 L3000.0605 4037.6777 l3000.0605 4033.4004 Lf1 D2997.8262 4034.7695 m2997.8262 4034.6641 2997.8408 4034.5586 2997.874 4034.4531 c2997.9063 4034.3477 2997.9541 4034.252 2998.0186 4034.1699 c2998.082 4034.0879 2998.1631 4034.0195 2998.2617 4033.9668 c2998.3594 4033.9141 2998.4746 4033.8867 2998.6064 4033.8867 c2998.7305 4033.8867 2998.8418 4033.9121 2998.9404 4033.9629 c2999.0381 4034.0156 2999.1221 4034.082 2999.1924 4034.1641 c2999.2617 4034.248 2999.3145 4034.3418 2999.3496 4034.4453 c2999.3867 4034.5488 2999.4043 4034.6523 2999.4043 4034.7578 c2999.4043 4034.8633 2999.3867 4034.9707 2999.3496 4035.0762 c2999.3145 4035.1816 2999.2617 4035.2754 2999.1924 4035.3574 c2999.1221 4035.4414 2999.0381 4035.5078 2998.9404 4035.5625 c2998.8418 4035.6152 2998.7305 4035.6406 2998.6064 4035.6406 c2998.4746 4035.6406 2998.3594 4035.6152 2998.2617 4035.5645 c2998.1631 4035.5137 2998.082 4035.4473 2998.0186 4035.3633 c2997.9541 4035.2813 2997.9063 4035.1875 2997.874 4035.084 c2997.8408 4034.9805 2997.8262 4034.875 2997.8262 4034.7695 CF*U*u0 D3003.7041 4034.7246 m3003.7041 4034.6348 l3003.7041 4034.6035 3003.7012 4034.5723 3003.6982 4034.543 C3001.6328 4034.543 l3001.6406 4034.4453 3001.666 4034.3555 3001.709 4034.2754 c3001.752 4034.1934 3001.8105 4034.123 3001.8828 4034.0645 c3001.9531 4034.0078 3002.0342 4033.9609 3002.125 4033.9277 c3002.2158 4033.8926 3002.3105 4033.877 3002.4082 4033.877 c3002.5781 4033.877 3002.7217 4033.9063 3002.8379 4033.9688 c3002.9551 4034.0313 3003.0508 4034.1172 3003.127 4034.2266 C3003.5791 4033.8652 l3003.3115 4033.502 3002.9229 4033.3223 3002.4141 4033.3223 c3002.2031 4033.3223 3002.0088 4033.3555 3001.8311 4033.4199 c3001.6533 4033.4863 3001.5 4033.5801 3001.3701 4033.7012 c3001.2393 4033.8203 3001.1377 4033.9688 3001.0645 4034.1445 c3000.9902 4034.3203 3000.9541 4034.5195 3000.9541 4034.7422 c3000.9541 4034.959 3000.9902 4035.1582 3001.0645 4035.3379 c3001.1377 4035.5176 3001.2383 4035.6699 3001.3672 4035.7969 c3001.4961 4035.9219 3001.6475 4036.0195 3001.8223 4036.0918 c3001.998 4036.1602 3002.1875 4036.1953 3002.3906 4036.1953 c3002.5791 4036.1953 3002.7539 4036.1641 3002.915 4036.1035 c3003.0752 4036.0391 3003.2129 4035.9473 3003.3301 4035.8262 c3003.4473 4035.7031 3003.5391 4035.5508 3003.6045 4035.3672 c3003.6709 4035.1836 3003.7041 4034.9707 3003.7041 4034.7246 CF1 D3003.0254 4035.0313 m3003.0254 4035.1172 3003.0127 4035.1992 3002.9883 4035.2793 c3002.9639 4035.3574 3002.9248 4035.4277 3002.8721 4035.4883 c3002.8193 4035.5488 3002.752 4035.5977 3002.6719 4035.6328 c3002.5898 4035.668 3002.4951 4035.6855 3002.3857 4035.6855 c3002.1816 4035.6855 3002.0098 4035.625 3001.8682 4035.502 c3001.7266 4035.3789 3001.6484 4035.2227 3001.6328 4035.0313 c3003.0254 4035.0313 Lf*U0 D3006.0742 4035.3926 m3006.0137 4035.4707 3005.9297 4035.5391 3005.8252 4035.5996 c3005.7207 4035.6563 3005.6045 4035.6855 3005.4805 4035.6855 c3005.3701 4035.6855 3005.2715 4035.6641 3005.1797 4035.6191 c3005.0898 4035.5723 3005.0449 4035.498 3005.0449 4035.3926 c3005.0449 4035.2852 3005.0938 4035.2109 3005.1953 4035.1699 c3005.2939 4035.125 3005.4404 4035.082 3005.6328 4035.0371 c3005.7344 4035.0137 3005.8369 4034.9824 3005.9414 4034.9453 c3006.0439 4034.9082 3006.1387 4034.8574 3006.2236 4034.7949 c3006.3086 4034.7324 3006.3779 4034.6563 3006.4297 4034.5625 c3006.4824 4034.4707 3006.5098 4034.3574 3006.5098 4034.2266 c3006.5098 4034.0605 3006.4785 4033.9199 3006.416 4033.8047 c3006.3535 4033.6895 3006.2705 4033.5957 3006.168 4033.5254 c3006.0635 4033.4531 3005.9424 4033.4023 3005.8057 4033.3691 c3005.668 4033.3379 3005.5254 4033.3203 3005.3789 4033.3203 c3005.167 4033.3203 3004.9609 4033.3613 3004.7617 4033.4375 c3004.5615 4033.5156 3004.3955 4033.625 3004.2637 4033.7676 C3004.7109 4034.1875 l3004.7861 4034.0879 3004.8848 4034.0078 3005.0049 4033.9434 c3005.125 4033.8809 3005.2598 4033.8477 3005.4063 4033.8477 c3005.4551 4033.8477 3005.5059 4033.8535 3005.5566 4033.8652 c3005.6074 4033.877 3005.6543 4033.8945 3005.6982 4033.918 c3005.7412 4033.9434 3005.7754 4033.9766 3005.8027 4034.0176 c3005.8281 4034.0586 3005.8428 4034.1094 3005.8428 4034.1699 c3005.8428 4034.2832 3005.79 4034.3633 3005.6865 4034.4121 c3005.582 4034.4629 3005.4268 4034.5117 3005.2197 4034.5605 c3005.1182 4034.584 3005.0195 4034.6113 3004.9219 4034.6484 c3004.8271 4034.6836 3004.7402 4034.7305 3004.665 4034.7891 c3004.5898 4034.8496 3004.5293 4034.9219 3004.4844 4035.0078 c3004.4395 4035.0938 3004.416 4035.2012 3004.416 4035.3301 c3004.416 4035.4805 3004.4473 4035.6113 3004.5098 4035.7207 c3004.5723 4035.8301 3004.6543 4035.918 3004.7559 4035.9883 c3004.8574 4036.0586 3004.9727 4036.1113 3005.1006 4036.1445 c3005.2285 4036.1777 3005.3613 4036.1953 3005.4961 4036.1953 c3005.6934 4036.1953 3005.8838 4036.1621 3006.0713 4036.0938 c3006.2578 4036.0254 3006.4063 4035.9219 3006.5156 4035.7832 c3006.0742 4035.3926 Lf3007.1992 4033.7969 m3007.1992 4033.918 3007.2441 4034.0215 3007.333 4034.1074 c3007.4219 4034.1953 3007.5273 4034.2383 3007.6523 4034.2383 c3007.7734 4034.2383 3007.8779 4034.1973 3007.9688 4034.1133 c3008.0596 4034.0313 3008.1045 4033.9277 3008.1045 4033.8086 c3008.1045 4033.6875 3008.0605 4033.584 3007.9717 4033.4961 c3007.8828 4033.4102 3007.7764 4033.3672 3007.6523 4033.3672 c3007.5918 4033.3672 3007.5342 4033.3789 3007.4805 4033.4004 c3007.4248 4033.4238 3007.377 4033.4531 3007.3359 4033.4902 c3007.2939 4033.5293 3007.2607 4033.5742 3007.2363 4033.627 c3007.2119 4033.6797 3007.1992 4033.7363 3007.1992 4033.7969 CF3010.5264 4037.4063 m3011.2393 4037.4063 L3011.2393 4034.0352 L3012.9414 4034.0352 L3012.9414 4033.4004 L3010.5264 4033.4004 l3010.5264 4037.4063 Lf*u3013.3486 4034.7695 m3013.3486 4034.9844 3013.3877 4035.1797 3013.4648 4035.3555 c3013.542 4035.5313 3013.6465 4035.6797 3013.7793 4035.8047 c3013.9111 4035.9297 3014.0674 4036.0254 3014.248 4036.0938 c3014.4297 4036.1621 3014.6221 4036.1953 3014.8252 4036.1953 c3015.0293 4036.1953 3015.2217 4036.1621 3015.4033 4036.0938 c3015.584 4036.0254 3015.7402 4035.9297 3015.8721 4035.8047 c3016.0049 4035.6797 3016.1094 4035.5313 3016.1865 4035.3555 c3016.2637 4035.1797 3016.3027 4034.9844 3016.3027 4034.7695 c3016.3027 4034.5547 3016.2637 4034.3574 3016.1865 4034.1816 c3016.1094 4034.0039 3016.0049 4033.8516 3015.8721 4033.7266 c3015.7402 4033.5996 3015.584 4033.5 3015.4033 4033.4297 c3015.2217 4033.3574 3015.0293 4033.3223 3014.8252 4033.3223 c3014.6221 4033.3223 3014.4297 4033.3574 3014.248 4033.4297 c3014.0674 4033.5 3013.9111 4033.5996 3013.7793 4033.7266 c3013.6465 4033.8516 3013.542 4034.0039 3013.4648 4034.1816 c3013.3877 4034.3574 3013.3486 4034.5547 3013.3486 4034.7695 CF1 D3014.0391 4034.7695 m3014.0391 4034.6641 3014.0547 4034.5586 3014.0879 4034.4531 c3014.1191 4034.3477 3014.168 4034.252 3014.2324 4034.1699 c3014.2959 4034.0879 3014.377 4034.0195 3014.4746 4033.9668 c3014.5732 4033.9141 3014.6895 4033.8867 3014.8252 4033.8867 c3014.9609 4033.8867 3015.0781 4033.9141 3015.1758 4033.9668 c3015.2744 4034.0195 3015.3564 4034.0879 3015.4199 4034.1699 c3015.4834 4034.252 3015.5322 4034.3477 3015.5635 4034.4531 c3015.5967 4034.5586 3015.6123 4034.6641 3015.6123 4034.7695 c3015.6123 4034.875 3015.5967 4034.9805 3015.5635 4035.084 c3015.5322 4035.1875 3015.4834 4035.2813 3015.4199 4035.3633 c3015.3564 4035.4473 3015.2744 4035.5137 3015.1758 4035.5645 c3015.0781 4035.6152 3014.9609 4035.6406 3014.8252 4035.6406 c3014.6895 4035.6406 3014.5732 4035.6152 3014.4746 4035.5645 c3014.377 4035.5137 3014.2959 4035.4473 3014.2324 4035.3633 c3014.168 4035.2813 3014.1191 4035.1875 3014.0879 4035.084 c3014.0547 4034.9805 3014.0391 4034.875 3014.0391 4034.7695 CF*U*u0 D3019.9453 4036.1172 m3019.9453 4033.6445 l3019.9453 4033.3984 3019.915 4033.1777 3019.8555 4032.9785 c3019.7949 4032.7813 3019.7012 4032.6133 3019.5752 4032.4746 c3019.4482 4032.3379 3019.2891 4032.2305 3019.0967 4032.1563 c3018.9043 4032.0801 3018.6768 4032.043 3018.4131 4032.043 c3018.3027 4032.043 3018.1865 4032.0527 3018.0654 4032.0703 c3017.9424 4032.0898 3017.8213 4032.1191 3017.7021 4032.1563 c3017.584 4032.1934 3017.4697 4032.2402 3017.3604 4032.2969 c3017.251 4032.3535 3017.1533 4032.418 3017.0664 4032.4902 C3017.457 4033.0156 l3017.5889 4032.8906 3017.7373 4032.7949 3017.9033 4032.7305 c3018.0693 4032.6641 3018.2373 4032.6309 3018.4072 4032.6309 c3018.5693 4032.6309 3018.7061 4032.6543 3018.8174 4032.7012 c3018.9287 4032.75 3019.0166 4032.8145 3019.083 4032.8984 c3019.1494 4032.9824 3019.1963 4033.0801 3019.2236 4033.1934 c3019.2529 4033.3066 3019.2666 4033.4316 3019.2666 4033.5684 C3019.2666 4033.7676 L3019.2549 4033.7676 l3019.1572 4033.6348 3019.0313 4033.5313 3018.8799 4033.4609 c3018.7266 4033.3906 3018.5557 4033.3555 3018.3672 4033.3555 c3018.1631 4033.3555 3017.9795 4033.3945 3017.8135 4033.4688 c3017.6465 4033.5449 3017.5068 4033.6445 3017.3916 4033.7734 c3017.2764 4033.9023 3017.1865 4034.0527 3017.1221 4034.2246 c3017.0586 4034.3965 3017.0264 4034.5781 3017.0264 4034.7695 c3017.0264 4034.9648 3017.0576 4035.1504 3017.1201 4035.3242 c3017.1816 4035.498 3017.2705 4035.6484 3017.3857 4035.7773 c3017.501 4035.9043 3017.6396 4036.0059 3017.8057 4036.082 c3017.9678 4036.1582 3018.1523 4036.1953 3018.3564 4036.1953 c3018.5479 4036.1953 3018.7275 4036.1563 3018.8936 4036.0762 c3019.0596 4035.998 3019.1904 4035.875 3019.2891 4035.709 C3019.3008 4035.709 L3019.3008 4036.1172 l3019.9453 4036.1172 Lf1 D3018.4971 4035.6406 m3018.373 4035.6406 3018.2627 4035.6191 3018.167 4035.5723 c3018.0693 4035.5293 3017.9893 4035.4668 3017.9229 4035.3906 c3017.8574 4035.3125 3017.8057 4035.2227 3017.7705 4035.1172 c3017.7344 4035.0098 3017.7158 4034.8984 3017.7158 4034.7793 c3017.7158 4034.6699 3017.7344 4034.5645 3017.7705 4034.4629 c3017.8057 4034.3613 3017.8574 4034.2695 3017.9229 4034.1895 c3017.9893 4034.1074 3018.0693 4034.043 3018.167 4033.9941 c3018.2627 4033.9453 3018.3711 4033.9219 3018.4922 4033.9219 c3018.6162 4033.9219 3018.7285 4033.9453 3018.8281 4033.9922 c3018.9287 4034.0391 3019.0127 4034.1016 3019.083 4034.1816 c3019.1533 4034.2598 3019.2061 4034.3496 3019.2441 4034.4551 c3019.2822 4034.5566 3019.3008 4034.666 3019.3008 4034.7793 c3019.3008 4034.8945 3019.2822 4035.0059 3019.2441 4035.1113 c3019.2061 4035.2168 3019.1533 4035.3086 3019.083 4035.3867 c3019.0127 4035.4648 3018.9287 4035.5293 3018.8311 4035.5723 c3018.7334 4035.6191 3018.6221 4035.6406 3018.4971 4035.6406 CF*U0 D3020.9863 4036.1172 m3021.6377 4036.1172 L3021.6377 4035.6641 L3021.6484 4035.6641 l3021.7236 4035.8223 3021.8291 4035.9492 3021.9648 4036.0488 c3022.1006 4036.1465 3022.2588 4036.1953 3022.4404 4036.1953 c3022.4668 4036.1953 3022.4951 4036.1934 3022.5254 4036.1934 c3022.5557 4036.1914 3022.582 4036.1855 3022.6035 4036.1777 C3022.6035 4035.5566 l3022.5596 4035.5664 3022.5205 4035.5742 3022.4893 4035.5781 c3022.4561 4035.582 3022.4248 4035.584 3022.3955 4035.584 c3022.2402 4035.584 3022.1162 4035.5566 3022.0225 4035.5 c3021.9268 4035.4434 3021.8535 4035.375 3021.8018 4035.2969 c3021.749 4035.2168 3021.7119 4035.1348 3021.6934 4035.0527 c3021.6748 4034.9707 3021.665 4034.9043 3021.665 4034.8555 C3021.665 4033.4004 L3020.9863 4033.4004 l3020.9863 4036.1172 Lf*u3024.8848 4033.7461 m3024.8672 4033.7461 l3024.7998 4033.625 3024.6895 4033.5273 3024.5391 4033.4492 c3024.3877 4033.3711 3024.2178 4033.332 3024.0244 4033.332 c3023.915 4033.332 3023.8008 4033.3477 3023.6816 4033.375 c3023.5635 4033.4043 3023.4541 4033.4512 3023.3535 4033.5176 c3023.2539 4033.582 3023.1709 4033.6699 3023.1045 4033.7773 c3023.0391 4033.8848 3023.0059 4034.0176 3023.0059 4034.1758 c3023.0059 4034.3789 3023.0635 4034.541 3023.1787 4034.6621 c3023.2939 4034.7832 3023.4414 4034.875 3023.623 4034.9395 c3023.8037 4035.0039 3024.0049 4035.0449 3024.2256 4035.0664 c3024.4463 4035.0859 3024.6611 4035.0977 3024.873 4035.0977 C3024.873 4035.166 l3024.873 4035.3359 3024.8115 4035.4609 3024.6895 4035.543 c3024.5664 4035.623 3024.4209 4035.6641 3024.251 4035.6641 c3024.1074 4035.6641 3023.9697 4035.6328 3023.8379 4035.5723 c3023.7061 4035.5117 3023.5967 4035.4395 3023.5098 4035.3516 C3023.1592 4035.7656 l3023.3135 4035.9082 3023.4912 4036.0156 3023.6934 4036.0879 c3023.8955 4036.1602 3024.0996 4036.1953 3024.3076 4036.1953 c3024.5479 4036.1953 3024.7471 4036.1621 3024.9043 4036.0938 c3025.0605 4036.0254 3025.1846 4035.9375 3025.2744 4035.8262 c3025.3652 4035.7188 3025.4287 4035.5957 3025.4648 4035.4609 c3025.5 4035.3242 3025.5186 4035.1895 3025.5186 4035.0527 C3025.5186 4033.4004 L3024.8848 4033.4004 l3024.8848 4033.7461 Lf1 D3024.873 4034.6387 m3024.7197 4034.6387 l3024.6123 4034.6387 3024.4961 4034.6348 3024.375 4034.625 c3024.2549 4034.6152 3024.1436 4034.5957 3024.041 4034.5625 c3023.9395 4034.5313 3023.8555 4034.4863 3023.7861 4034.4277 c3023.7188 4034.3691 3023.6846 4034.2891 3023.6846 4034.1875 c3023.6846 4034.123 3023.6992 4034.0703 3023.7275 4034.0254 c3023.7559 4033.9824 3023.792 4033.9473 3023.8379 4033.9219 c3023.8838 4033.8945 3023.9336 4033.875 3023.9912 4033.8652 c3024.0469 4033.8535 3024.1045 4033.8477 3024.1602 4033.8477 c3024.3936 4033.8477 3024.5713 4033.9102 3024.6924 4034.0352 c3024.8125 4034.1582 3024.873 4034.3281 3024.873 4034.543 c3024.873 4034.6387 Lf*U0 D3028.0244 4035.3926 m3027.9639 4035.4707 3027.8809 4035.5391 3027.7754 4035.5996 c3027.6689 4035.6563 3027.5547 4035.6855 3027.4307 4035.6855 c3027.3213 4035.6855 3027.2207 4035.6641 3027.1299 4035.6191 c3027.04 4035.5723 3026.9941 4035.498 3026.9941 4035.3926 c3026.9941 4035.2852 3027.0449 4035.2109 3027.1436 4035.1699 c3027.2441 4035.125 3027.3906 4035.082 3027.583 4035.0371 c3027.6846 4035.0137 3027.7881 4034.9824 3027.8916 4034.9453 c3027.9951 4034.9082 3028.0889 4034.8574 3028.1748 4034.7949 c3028.2578 4034.7324 3028.3281 4034.6563 3028.3809 4034.5625 c3028.4336 4034.4707 3028.46 4034.3574 3028.46 4034.2266 c3028.46 4034.0605 3028.4287 4033.9199 3028.3662 4033.8047 c3028.3037 4033.6895 3028.2217 4033.5957 3028.1172 4033.5254 c3028.0137 4033.4531 3027.8936 4033.4023 3027.7549 4033.3691 c3027.6172 4033.3379 3027.4756 4033.3203 3027.3281 4033.3203 c3027.1162 4033.3203 3026.9121 4033.3613 3026.7119 4033.4375 c3026.5117 4033.5156 3026.3457 4033.625 3026.2139 4033.7676 C3026.6611 4034.1875 l3026.7363 4034.0879 3026.834 4034.0078 3026.9551 4033.9434 c3027.0752 4033.8809 3027.209 4033.8477 3027.3564 4033.8477 c3027.4053 4033.8477 3027.4551 4033.8535 3027.5068 4033.8652 c3027.5576 4033.877 3027.6045 4033.8945 3027.6475 4033.918 c3027.6904 4033.9434 3027.7266 4033.9766 3027.752 4034.0176 c3027.7793 4034.0586 3027.792 4034.1094 3027.792 4034.1699 c3027.792 4034.2832 3027.7402 4034.3633 3027.6367 4034.4121 c3027.5332 4034.4629 3027.377 4034.5117 3027.1699 4034.5605 c3027.0684 4034.584 3026.9688 4034.6113 3026.873 4034.6484 c3026.7764 4034.6836 3026.6914 4034.7305 3026.6152 4034.7891 c3026.54 4034.8496 3026.4795 4034.9219 3026.4346 4035.0078 c3026.3896 4035.0938 3026.3662 4035.2012 3026.3662 4035.3301 c3026.3662 4035.4805 3026.3975 4035.6113 3026.46 4035.7207 c3026.5225 4035.8301 3026.6045 4035.918 3026.7061 4035.9883 c3026.8076 4036.0586 3026.9229 4036.1113 3027.0508 4036.1445 c3027.1787 4036.1777 3027.3115 4036.1953 3027.4473 4036.1953 c3027.6436 4036.1953 3027.835 4036.1621 3028.0215 4036.0938 c3028.208 4036.0254 3028.3564 4035.9219 3028.4658 4035.7832 c3028.0244 4035.3926 Lf3029.1494 4033.7969 m3029.1494 4033.918 3029.1943 4034.0215 3029.2822 4034.1074 c3029.3711 4034.1953 3029.4775 4034.2383 3029.6025 4034.2383 c3029.7236 4034.2383 3029.8291 4034.1973 3029.9189 4034.1133 c3030.0098 4034.0313 3030.0557 4033.9277 3030.0557 4033.8086 c3030.0557 4033.6875 3030.0107 4033.584 3029.9229 4033.4961 c3029.834 4033.4102 3029.7266 4033.3672 3029.6025 4033.3672 c3029.542 4033.3672 3029.4844 4033.3789 3029.4297 4033.4004 c3029.376 4033.4238 3029.3271 4033.4531 3029.2861 4033.4902 c3029.2441 4033.5293 3029.2109 4033.5742 3029.1865 4033.627 c3029.1621 4033.6797 3029.1494 4033.7363 3029.1494 4033.7969 CF0.195313 0.964844 0.902344 0.101563 (C=20 M=96 Y=90 K=10) 0 0 Xk2995.6514 4067.542 m2992.3018 4067.542 2989.5811 4064.8237 2989.5811 4061.4702 c2989.5811 4058.1147 2992.3018 4055.3979 2995.6514 4055.3979 c2999.0078 4055.3979 3001.7256 4058.1147 3001.7256 4061.4702 c3001.7256 4064.8237 2999.0078 4067.542 2995.6514 4067.542 CF0.875 0.359375 0.875 0.273438 (C=88 M=36 Y=88 K=27) 0 0 Xk2998.8105 4073.6807 m2998.6631 4073.7266 2998.4043 4073.7974 v2999.8076 4074.2153 3001.5703 4074.6699 3003.5244 4075.0093 c3000.7842 4075.0093 2998.4541 4074.8726 2996.4775 4074.5669 c2996.1934 4074.522 2995.9175 4074.4751 2995.6523 4074.4263 c2995.3877 4074.4751 2995.1113 4074.522 2994.8271 4074.5669 c2992.8506 4074.8726 2990.5225 4075.0093 2987.7822 4075.0093 c2989.7363 4074.6699 2991.499 4074.2153 2992.9019 4073.7983 c2992.6416 4073.7266 2992.4932 4073.6807 y2983.4238 4070.8394 2976.5923 4064.6284 2977.083 4059.5366 c2977.4902 4055.3101 2981.7983 4053.1675 2988.8213 4053.8989 c2984.916 4054.606 2983.3145 4056.5815 2983.0254 4059.5737 c2982.5825 4064.1558 2987.7773 4069.5732 2995.1528 4072.6895 c2995.3345 4072.7632 2995.6543 4072.8828 v2995.9727 4072.7632 2996.1548 4072.6895 y3003.5293 4069.5732 3008.7207 4064.1558 3008.2813 4059.5737 c3007.9941 4056.5815 3006.3896 4054.606 3002.4854 4053.8989 c3009.5068 4053.1675 3013.8193 4055.3101 3014.2236 4059.5366 c3014.7148 4064.6284 3007.8818 4070.8394 2998.8105 4073.6807 CF*u1 D0.613281 0.507813 0.433594 0.144531 (C=61 M=51 Y=43 K=14) 0 0 Xk2959.2764 4046.3008 m2959.2764 4046.3281 l2960.7139 4046.498 2961.667 4047.4141 2961.667 4048.6406 c2961.667 4050.3652 2960.0332 4050.7305 2959.0928 4050.7305 C2955.042 4050.7305 L2953.1338 4041.6113 L2957.2896 4041.6621 l2959.3804 4041.6875 2961.0396 4042.6035 2961.0396 4044.5371 c2961.0396 4045.543 2960.3218 4046.1445 2959.2764 4046.3008 CF0 D2956.5576 4043.3359 m2955.9043 4043.3359 L2956.3486 4045.4785 L2956.9365 4045.4785 l2958.0342 4045.4785 2958.6094 4045.3594 2958.6094 4044.5625 c2958.6094 4043.6758 2957.7852 4043.3359 2956.5576 4043.3359 CF2957.6162 4047.125 m2956.7017 4047.125 L2957.0938 4049.0059 L2957.7217 4049.0059 l2958.6357 4049.0059 2959.2368 4048.8887 2959.2368 4048.1563 c2959.2368 4047.5293 2958.6357 4047.125 2957.6162 4047.125 CF*U*u1 D2965.8477 4048.5762 m2964.7891 4048.5762 2964.0449 4048.4199 2963.3516 4048.1836 C2963.1167 4046.4707 l2963.9014 4046.877 2964.4775 4047.0078 2965.3252 4047.0078 c2966.0967 4047.0078 2966.5796 4046.6133 2966.5796 4046.1309 c2966.5796 4046.0391 2966.5796 4045.9492 2966.5542 4045.8574 c2966.2266 4045.8848 2965.7568 4045.9219 2965.2866 4045.9219 c2963.209 4045.9219 2961.5342 4045.0996 2961.5342 4043.4258 c2961.5342 4042.1074 2962.3457 4041.4531 2963.8091 4041.4531 c2964.7236 4041.4531 2965.5996 4041.7793 2966.0967 4042.5645 C2966.0967 4042.5898 L2966.123 4042.5645 L2966.0186 4041.6094 L2967.9385 4041.6094 l2968.2002 4043.6621 2968.8022 4045.1914 2968.8022 4046.2617 c2968.8022 4047.9336 2967.4683 4048.5762 2965.8477 4048.5762 CF0 D2964.5547 4043.0215 m2964.0576 4043.0215 2963.7573 4043.3887 2963.7573 4043.7012 c2963.7573 4044.3008 2964.5796 4044.7051 2965.7041 4044.668 c2965.8477 4044.668 2966.1357 4044.668 2966.3311 4044.6289 c2966.1621 4043.7129 2965.5605 4043.0215 2964.5547 4043.0215 CF*U2975.0742 4048.5762 m2973.8311 4048.5762 2973.1265 4048.0664 2972.4473 4047.3086 C2972.4209 4047.3086 L2972.6045 4048.418 L2970.4219 4048.418 l2970.3564 4047.8047 2970.252 4047.2285 2970.1338 4046.6406 C2969.0757 4041.6094 L2971.4268 4041.6094 L2972.0942 4044.7461 l2972.2637 4045.752 2972.8516 4046.6152 2973.8452 4046.6152 c2974.4995 4046.6406 2974.7593 4046.2363 2974.7593 4045.832 c2974.7593 4045.4785 2974.668 4045.1387 2974.6025 4044.7988 C2973.9497 4041.6094 L2976.3794 4041.6094 L2977.0068 4044.7852 l2977.1514 4045.5039 2977.1904 4045.7656 2977.1904 4046.2227 c2977.1904 4047.5566 2976.4463 4048.5762 2975.0742 4048.5762 CF2982.2998 4046.8516 m2982.8213 4046.8516 2983.3306 4046.707 2983.8154 4046.4844 C2984.3247 4048.1172 l2983.6318 4048.4063 2982.7563 4048.5742 2982.1821 4048.5742 c2979.5684 4048.5742 2977.79 4046.7988 2977.79 4044.5625 c2977.79 4042.8516 2979.0186 4041.4531 2981.0054 4041.4531 c2981.9199 4041.4531 2982.5479 4041.5586 2983.0181 4041.7148 C2983.3579 4043.4785 l2982.8477 4043.2695 2982.4297 4043.1777 2981.8428 4043.1777 c2980.8481 4043.1777 2980.2212 4043.8438 2980.2212 4044.6543 c2980.2212 4046.0664 2981.083 4046.8516 2982.2998 4046.8516 CF*u1 D2988.3887 4048.5762 m2985.7222 4048.5762 2983.9971 4046.9551 2983.9971 4044.5625 c2983.9971 4042.8516 2985.0166 4041.4531 2987.54 4041.4531 c2990.0869 4041.4531 2991.9297 4042.6953 2991.9297 4045.5313 c2991.9297 4047.2422 2990.7012 4048.5762 2988.3887 4048.5762 CF0 D2987.71 4043.0996 m2986.9121 4043.0859 2986.4287 4043.7012 2986.4287 4044.6152 c2986.4287 4045.7012 2987.1338 4046.9277 2988.271 4046.9277 c2989.1851 4046.9277 2989.499 4046.2617 2989.499 4045.5586 c2989.499 4044.0156 2988.8066 4043.0996 2987.71 4043.0996 CF*U*u1 D2999.5469 4050.7324 m2994.124 4041.6094 L2996.7646 4041.6094 L2997.8477 4043.5586 L3001.3896 4043.5586 L3001.6377 4041.6094 L3004.0947 4041.6094 L3002.6055 4050.7324 l2999.5469 4050.7324 Lf0 D2998.8027 4045.2832 m3000.7363 4048.8496 L3000.7627 4048.8496 L3001.1553 4045.2832 l2998.8027 4045.2832 Lf*U3005.4531 4046.6934 m3008.3672 4046.6934 L3004.6563 4043.3887 L3004.3164 4041.6094 L3010.2363 4041.6094 L3010.5898 4043.3359 L3007.4795 4043.3359 L3011.2168 4046.6406 L3011.5811 4048.418 L3005.8066 4048.418 l3005.4531 4046.6934 Lf3015.2275 4046.7715 m3016.9395 4046.7715 L3017.2266 4048.418 L3015.6064 4048.418 L3016.0771 4050.5488 L3013.5938 4049.8809 L3013.2666 4048.418 L3011.9209 4048.418 L3011.6328 4046.7715 L3012.8887 4046.7715 L3012.4834 4044.8633 l3012.3262 4044.1445 3012.2734 4043.8047 3012.2734 4043.4648 c3012.2734 4042.041 3013.2285 4041.4531 3014.4307 4041.4531 c3014.9004 4041.4531 3015.3965 4041.5059 3015.8936 4041.584 C3016.1563 4043.1387 l3015.9072 4043.0469 3015.6455 4042.9434 3015.3965 4042.9434 c3014.9268 4042.9434 3014.627 4043.2441 3014.627 4043.7012 c3014.627 4044.0293 3014.7168 4044.3691 3014.8213 4044.8789 c3015.2275 4046.7715 Lf*u1 D3021.0693 4048.5742 m3018.0361 4048.5742 3016.9912 4046.1445 3016.9912 4044.5625 c3016.9912 4042.8516 3018.2197 4041.4531 3020.4922 4041.4531 c3021.1719 4041.4531 3022.0469 4041.584 3022.8721 4041.832 C3023.1719 4043.4922 l3022.5176 4043.1777 3021.6689 4043.0215 3021.042 4043.0215 c3019.6045 4043.0215 3019.2393 4043.5957 3019.2119 4044.3281 C3024.0342 4044.3281 l3024.126 4044.7324 3024.2041 4045.334 3024.2041 4045.6094 c3024.2041 4047.6738 3022.8584 4048.5742 3021.0693 4048.5742 CF0 D3019.3564 4045.6602 m3019.5264 4046.3145 3020.0752 4047.0078 3021.0947 4047.0078 c3021.957 4047.0078 3022.2441 4046.3926 3022.2441 4045.6602 c3019.3564 4045.6602 Lf*U3029.2881 4046.8516 m3029.8096 4046.8516 3030.3193 4046.707 3030.8037 4046.4844 C3031.3125 4048.1172 l3030.6201 4048.4063 3029.7441 4048.5742 3029.1699 4048.5742 c3026.5557 4048.5742 3024.7783 4046.7988 3024.7783 4044.5625 c3024.7783 4042.8516 3026.0068 4041.4531 3027.9932 4041.4531 c3028.9082 4041.4531 3029.5361 4041.5586 3030.0049 4041.7148 C3030.3457 4043.4785 l3029.8359 4043.2695 3029.417 4043.1777 3028.8301 4043.1777 c3027.8359 4043.1777 3027.208 4043.8438 3027.208 4044.6543 c3027.208 4046.0664 3028.0713 4046.8516 3029.2881 4046.8516 CF*u1 D3035.2188 4048.5762 m3034.1602 4048.5762 3033.416 4048.4199 3032.7227 4048.1836 C3032.4873 4046.4707 l3033.2715 4046.877 3033.8477 4047.0078 3034.6963 4047.0078 c3035.4678 4047.0078 3035.9502 4046.6133 3035.9502 4046.1309 c3035.9502 4046.0391 3035.9502 4045.9492 3035.9258 4045.8574 c3035.5977 4045.8848 3035.1279 4045.9219 3034.6582 4045.9219 c3032.5801 4045.9219 3030.9053 4045.0996 3030.9053 4043.4258 c3030.9053 4042.1074 3031.7178 4041.4531 3033.1807 4041.4531 c3034.0957 4041.4531 3034.9707 4041.7793 3035.4678 4042.5645 C3035.4678 4042.5898 L3035.4932 4042.5645 L3035.3887 4041.6094 L3037.3096 4041.6094 l3037.5713 4043.6621 3038.1738 4045.1914 3038.1738 4046.2617 c3038.1738 4047.9336 3036.8398 4048.5762 3035.2188 4048.5762 CF0 D3033.9258 4043.0215 m3033.4287 4043.0215 3033.1279 4043.3887 3033.1279 4043.7012 c3033.1279 4044.3008 3033.9521 4044.7051 3035.0752 4044.668 c3035.2188 4044.668 3035.5059 4044.668 3035.7021 4044.6289 c3035.5332 4043.7129 3034.9316 4043.0215 3033.9258 4043.0215 CF*UULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF